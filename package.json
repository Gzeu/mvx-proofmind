{
  "name": "mvx-proofmind",
  "version": "2.1.0",
  "description": "ðŸŽ¯ Next-generation AI-powered blockchain certification system on MultiversX with advanced neural networks, real-time analytics, and enterprise-grade automation - September 2025 Edition",
  "main": "index.js",
  "type": "module",
  "scripts": {
    "dev": "concurrently \"npm run dev:frontend\" \"npm run dev:api\" \"npm run dev:ai\" \"npm run dev:monitoring\"",
    "dev:frontend": "cd frontend && npm run dev",
    "dev:api": "cd mindsdb-integration/api && npm run dev",
    "dev:ai": "cd ai-services && npm run dev",
    "dev:monitoring": "cd infrastructure/monitoring && npm run dev",
    "dev:full": "docker-compose up -d && npm run dev",
    "build": "npm run build:shared && npm run build:frontend && npm run build:api && npm run build:ai && npm run build:mobile",
    "build:shared": "cd shared && npm run build",
    "build:frontend": "cd frontend && npm run build",
    "build:api": "cd mindsdb-integration/api && npm run build",
    "build:ai": "cd ai-services && npm run build",
    "build:mobile": "cd mobile-sdk && npm run build",
    "build:production": "npm run test:comprehensive && npm run build && npm run optimize",
    "test": "npm run test:unit && npm run test:integration && npm run test:e2e && npm run test:contract && npm run test:ai",
    "test:unit": "jest --testPathPattern=\".*\\.test\\.(js|ts)$\"",
    "test:integration": "jest --testPathPattern=\".*\\.integration\\.(js|ts)$\"",
    "test:e2e": "playwright test --config=playwright.config.ts",
    "test:frontend": "cd frontend && npm test",
    "test:api": "cd mindsdb-integration/api && npm test",
    "test:contract": "cd contract && cargo test",
    "test:ai": "cd ai-services && npm test",
    "test:mobile": "cd mobile-sdk && npm test",
    "test:coverage": "jest --coverage --coverageReporters=lcov,text,html",
    "test:comprehensive": "npm run test && npm run test:security && npm run test:performance",
    "test:security": "npm run security:audit && npm run security:snyk",
    "test:performance": "npm run benchmark:ai && npm run benchmark:api",
    "setup": "./scripts/setup.sh && npm run setup:workspaces && npm run setup:ai && npm run setup:blockchain",
    "setup:workspaces": "npm run setup:frontend && npm run setup:api && npm run setup:ai && npm run setup:mobile",
    "setup:frontend": "cd frontend && npm install && npm run build:storybook",
    "setup:api": "cd mindsdb-integration/api && npm install",
    "setup:ai": "cd ai-services && npm install && npm run download:models",
    "setup:mobile": "cd mobile-sdk && npm install",
    "setup:blockchain": "cd contract && cargo build --release --target=wasm32-unknown-unknown",
    "initialize:ai": "npm run mindsdb:setup && npm run ai:init-models && npm run ai:train:initial",
    "initialize:blockchain": "npm run contracts:build && npm run contracts:deploy:devnet",
    "contracts:build": "cd contract && cargo build --release --target=wasm32-unknown-unknown",
    "contracts:test": "cd contract && cargo test",
    "contracts:clean": "cd contract && cargo clean",
    "contracts:optimize": "cd contract && wasm-opt -Oz -o output/mvx-proofmind-optimized.wasm output/mvx-proofmind.wasm",
    "deploy:devnet": "cd contract && mxpy contract deploy --bytecode=./output/mvx-proofmind.wasm --keyfile=walletKey.json --gas-limit=100000000 --proxy=https://devnet-gateway.multiversx.com --chain=D --send",
    "deploy:devnet:verified": "npm run contracts:build && npm run contracts:optimize && npm run deploy:devnet && npm run verify:contract",
    "deploy:testnet": "cd contract && mxpy contract deploy --bytecode=./output/mvx-proofmind.wasm --keyfile=walletKey.json --gas-limit=100000000 --proxy=https://testnet-gateway.multiversx.com --chain=T --send",
    "deploy:mainnet": "cd contract && mxpy contract deploy --bytecode=./output/mvx-proofmind.wasm --keyfile=walletKey.json --gas-limit=100000000 --proxy=https://gateway.multiversx.com --chain=1 --send",
    "deploy:mainnet:audited": "npm run security:audit && npm run test:comprehensive && npm run deploy:mainnet",
    "verify:contract": "cd contract && mxpy contract verify --contract-address=$CONTRACT_ADDRESS --source-code=./src",
    "mindsdb:setup": "cd mindsdb-integration && node setup-models.js",
    "mindsdb:start": "docker-compose up mindsdb -d",
    "mindsdb:stop": "docker-compose down mindsdb",
    "mindsdb:logs": "docker-compose logs -f mindsdb",
    "mindsdb:reset": "docker-compose down mindsdb && docker volume rm mvx-proofmind_mindsdb-data && docker-compose up mindsdb -d",
    "ai:init-models": "cd ai-services && npm run init-neural-networks",
    "ai:train": "cd ai-services && npm run train-models",
    "ai:train:initial": "cd ai-services && npm run train-initial-models",
    "ai:train:advanced": "cd ai-services && npm run train-advanced-models",
    "ai:predict": "cd ai-services && npm run predict",
    "ai:evaluate": "cd ai-services && npm run evaluate-models",
    "ai:deploy": "cd ai-services && npm run deploy-models",
    "ai:monitor": "cd ai-services && npm run monitor-performance",
    "lint": "npm run lint:frontend && npm run lint:api && npm run lint:ai && npm run lint:mobile",
    "lint:frontend": "cd frontend && npm run lint",
    "lint:api": "cd mindsdb-integration/api && npm run lint",
    "lint:ai": "cd ai-services && npm run lint",
    "lint:mobile": "cd mobile-sdk && npm run lint",
    "lint:fix": "npm run lint -- --fix",
    "format": "prettier --write \"**/*.{js,jsx,ts,tsx,json,md,yml,yaml}\" --ignore-path .gitignore",
    "format:check": "prettier --check \"**/*.{js,jsx,ts,tsx,json,md,yml,yaml}\" --ignore-path .gitignore",
    "type-check": "tsc --noEmit --skipLibCheck",
    "type-check:watch": "tsc --noEmit --skipLibCheck --watch",
    "security:audit": "npm audit --audit-level moderate",
    "security:fix": "npm audit fix",
    "security:snyk": "snyk test",
    "security:check-deps": "npm run security:audit && npm run security:snyk",
    "monitor": "node scripts/monitor-performance.js",
    "monitor:ai": "cd ai-services && npm run monitor",
    "monitor:blockchain": "node scripts/monitor-blockchain.js",
    "health-check": "node scripts/health-check.js",
    "health-check:ai": "cd ai-services && npm run health-check",
    "health-check:full": "npm run health-check && npm run health-check:ai && npm run monitor:blockchain",
    "analyze:bundle": "npm run build && npx webpack-bundle-analyzer",
    "analyze:ai-performance": "cd ai-services && npm run analyze-performance",
    "analyze:dependencies": "npx depcheck && npm ls --depth=0",
    "benchmark": "node scripts/benchmark-system.js",
    "benchmark:ai": "cd ai-services && npm run benchmark",
    "benchmark:api": "cd mindsdb-integration/api && npm run benchmark",
    "optimize": "npm run optimize:frontend && npm run optimize:ai",
    "optimize:frontend": "cd frontend && npm run optimize",
    "optimize:ai": "cd ai-services && npm run optimize-models",
    "clean": "rimraf coverage dist .vercel node_modules/.cache",
    "clean:full": "npm run clean && npm run clean:workspaces",
    "clean:workspaces": "cd frontend && npm run clean && cd ../mindsdb-integration/api && npm run clean && cd ../../ai-services && npm run clean",
    "prepare": "husky install",
    "prepublishOnly": "npm run test:comprehensive && npm run build:production",
    "release": "standard-version && git push origin main --tags",
    "release:major": "npm run release -- --release-as major",
    "release:minor": "npm run release -- --release-as minor",
    "release:patch": "npm run release -- --release-as patch",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:clean": "docker-compose down -v && docker system prune -f",
    "k8s:deploy": "kubectl apply -f infrastructure/kubernetes/",
    "k8s:delete": "kubectl delete -f infrastructure/kubernetes/",
    "terraform:plan": "cd infrastructure/terraform && terraform plan",
    "terraform:apply": "cd infrastructure/terraform && terraform apply",
    "deploy:staging": "vercel --env=staging",
    "deploy:production": "vercel --prod",
    "deploy:edge": "npm run build:production && npm run deploy:production",
    "storybook:build": "cd frontend && npm run build-storybook",
    "storybook:deploy": "cd frontend && npm run deploy-storybook",
    "docs:build": "cd docs && npm run build",
    "docs:serve": "cd docs && npm run serve",
    "mobile:ios": "cd mobile-sdk/ios && xcodebuild -workspace MVXProofMind.xcworkspace -scheme MVXProofMind build",
    "mobile:android": "cd mobile-sdk/android && ./gradlew assembleDebug",
    "backup:data": "node scripts/backup-data.js",
    "restore:data": "node scripts/restore-data.js",
    "migrate:db": "cd mindsdb-integration && npm run migrate",
    "seed:data": "cd mindsdb-integration && npm run seed"
  },
  "keywords": [
    "blockchain",
    "multiversx",
    "mindsdb",
    "artificial-intelligence",
    "machine-learning",
    "neural-networks",
    "certificates",
    "smart-contracts",
    "typescript",
    "react",
    "predictive-analytics",
    "verification",
    "automation",
    "enterprise",
    "rust",
    "wasm",
    "tensorflow",
    "real-time",
    "fraud-detection",
    "compliance",
    "2025",
    "proof-system",
    "certification",
    "ai-powered",
    "supernova",
    "edge-computing",
    "mobile-sdk",
    "cross-platform"
  ],
  "author": {
    "name": "George Pricop",
    "email": "pricopgeorge@gmail.com",
    "url": "https://github.com/Gzeu"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/Gzeu/mvx-proofmind.git"
  },
  "bugs": {
    "url": "https://github.com/Gzeu/mvx-proofmind/issues"
  },
  "homepage": "https://mvx-proofmind.vercel.app",
  "devDependencies": {
    "@types/node": "^20.18.0",
    "@types/express": "^4.17.21",
    "@types/cors": "^2.8.17",
    "@types/jest": "^29.5.13",
    "@types/lodash": "^4.17.10",
    "@types/uuid": "^10.0.0",
    "@types/bcryptjs": "^2.4.6",
    "@types/jsonwebtoken": "^9.0.7",
    "@types/compression": "^1.7.5",
    "@typescript-eslint/eslint-plugin": "^8.8.1",
    "@typescript-eslint/parser": "^8.8.1",
    "concurrently": "^9.1.0",
    "eslint": "^9.12.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-react": "^7.37.1",
    "eslint-plugin-react-hooks": "^4.6.2",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-jsx-a11y": "^6.10.0",
    "husky": "^9.1.6",
    "lint-staged": "^15.2.10",
    "prettier": "^3.3.3",
    "typescript": "^5.6.3",
    "jest": "^29.7.0",
    "ts-jest": "^29.2.5",
    "supertest": "^7.0.0",
    "nodemon": "^3.1.7",
    "rimraf": "^6.0.1",
    "@playwright/test": "^1.48.0",
    "playwright": "^1.48.0",
    "standard-version": "^9.5.0",
    "webpack-bundle-analyzer": "^4.10.2",
    "snyk": "^1.1293.1",
    "depcheck": "^1.4.7",
    "cross-env": "^7.0.3",
    "dotenv-cli": "^7.4.2",
    "@storybook/cli": "^8.3.5"
  },
  "dependencies": {
    "@multiversx/sdk-core": "^13.8.0",
    "@multiversx/sdk-dapp": "^2.33.3",
    "@multiversx/sdk-web-wallet-provider": "^4.2.0",
    "@multiversx/sdk-wallet-connect-provider": "^3.1.0",
    "@multiversx/sdk-extension-provider": "^2.1.0",
    "@multiversx/sdk-hw-provider": "^3.1.0",
    "@multiversx/sdk-network-providers": "^3.2.0",
    "mindsdb-js-sdk": "^4.31.0",
    "@tensorflow/tfjs": "^4.21.0",
    "@tensorflow/tfjs-node": "^4.21.0",
    "@tensorflow/tfjs-react-native": "^0.8.0",
    "tensorflow": "^2.15.0",
    "axios": "^1.7.7",
    "cors": "^2.8.5",
    "dotenv": "^16.4.5",
    "express": "^4.21.1",
    "express-rate-limit": "^7.4.1",
    "helmet": "^7.1.0",
    "morgan": "^1.10.0",
    "socket.io": "^4.8.0",
    "socket.io-client": "^4.8.0",
    "winston": "^3.15.0",
    "winston-daily-rotate-file": "^5.0.0",
    "zod": "^3.23.8",
    "uuid": "^10.0.0",
    "date-fns": "^4.1.0",
    "lodash": "^4.17.21",
    "crypto-js": "^4.2.0",
    "jsonwebtoken": "^9.0.2",
    "bcryptjs": "^2.4.3",
    "rate-limiter-flexible": "^5.0.3",
    "compression": "^1.7.4",
    "redis": "^4.7.0",
    "ioredis": "^5.4.1",
    "mongodb": "^6.9.0",
    "mongoose": "^8.7.1",
    "prisma": "^5.20.0",
    "@prisma/client": "^5.20.0",
    "graphql": "^16.9.0",
    "apollo-server-express": "^3.12.1",
    "graphql-tools": "^9.0.1",
    "dataloader": "^2.2.2",
    "ml-matrix": "^6.12.0",
    "simple-statistics": "^7.8.5",
    "d3": "^7.9.0",
    "chart.js": "^4.4.4",
    "react-chartjs-2": "^5.2.0",
    "framer-motion": "^11.11.7",
    "@emotion/react": "^11.13.3",
    "@emotion/styled": "^11.13.0",
    "tailwindcss": "^3.4.13",
    "postcss": "^8.4.47",
    "autoprefixer": "^10.4.20",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-router-dom": "^6.26.2",
    "react-query": "^3.39.3",
    "react-hook-form": "^7.53.0",
    "react-i18next": "^15.0.2",
    "i18next": "^23.15.2",
    "react-helmet-async": "^2.0.5",
    "workbox-webpack-plugin": "^7.1.0",
    "web-vitals": "^4.2.3",
    "@sentry/react": "^8.33.1",
    "@sentry/node": "^8.33.1",
    "pino": "^9.4.0",
    "pino-pretty": "^11.2.2",
    "bull": "^4.16.3",
    "agenda": "^5.0.0",
    "node-cron": "^3.0.3",
    "sharp": "^0.33.5",
    "multer": "^1.4.5-lts.1",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.1",
    "joi": "^17.13.3",
    "celebrate": "^15.0.3",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "passport-google-oauth20": "^2.0.0",
    "@octokit/rest": "^21.0.2",
    "node-fetch": "^3.3.2",
    "cheerio": "^1.0.0",
    "puppeteer": "^23.4.1",
    "@aws-sdk/client-s3": "^3.665.0",
    "@aws-sdk/client-ses": "^3.665.0",
    "nodemailer": "^6.9.15",
    "twilio": "^5.3.1",
    "stripe": "^16.12.0",
    "@stripe/stripe-js": "^4.7.0",
    "web3": "^4.13.0",
    "ethers": "^6.13.3",
    "@solana/web3.js": "^1.95.4",
    "@polkadot/api": "^13.2.1",
    "ipfs-http-client": "^60.0.1",
    "orbit-db": "^0.29.0"
  },
  "peerDependencies": {
    "react": ">=18.0.0",
    "react-dom": ">=18.0.0",
    "typescript": ">=5.0.0"
  },
  "lint-staged": {
    "**/*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "**/*.{json,md,yml,yaml}": [
      "prettier --write"
    ],
    "**/*.{css,scss}": [
      "prettier --write"
    ]
  },
  "engines": {
    "node": ">=20.18.0",
    "npm": ">=10.8.2"
  },
  "volta": {
    "node": "20.18.0",
    "npm": "10.8.2"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/src",
      "<rootDir>/tests"
    ],
    "testMatch": [
      "**/__tests__/**/*.+(ts|tsx|js)",
      "**/*.(test|spec).+(ts|tsx|js)"
    ],
    "transform": {
      "^.+\\.(ts|tsx)$": "ts-jest"
    },
    "collectCoverageFrom": [
      "src/**/*.{js,ts,tsx}",
      "!src/**/*.d.ts",
      "!src/index.ts"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 80,
        "functions": 80,
        "lines": 80,
        "statements": 80
      }
    }
  },
  "funding": {
    "type": "github",
    "url": "https://github.com/sponsors/Gzeu"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  }
}